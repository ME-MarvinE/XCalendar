<?xml version="1.0" encoding="UTF-8" ?>
<ContentView
    x:Class="XCalendar.CalendarView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:Converters="clr-namespace:XCalendar.Converters"
    xmlns:Enums="clr-namespace:XCalendar.Enums"
    xmlns:Models="clr-namespace:XCalendar.Models"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:xc="clr-namespace:XCalendar"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    x:Name="MainCalendarView"
    x:DataType="{x:Type xc:CalendarView}">

    <StackLayout Spacing="0">
        <StackLayout.Resources>
            <System:Boolean x:Key="TrueValue">True</System:Boolean>
            <System:Boolean x:Key="FalseValue">False</System:Boolean>

            <xct:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter" />

            <xct:EnumToBoolConverter x:Key="EnumToBoolConverter" />

            <xct:MathExpressionConverter x:Key="MathExpressionConverter" />

            <xct:MultiConverter x:Key="EnumToStringCharLimitConverter">
                <Converters:EnumToStringConverter />
                <Converters:StringCharLimitConverter />
            </xct:MultiConverter>

            <x:Array x:Key="DayNamesMultiConverterParams" Type="{x:Type xct:MultiConverterParameter}">
                <xct:MultiConverterParameter ConverterType="{x:Type Converters:StringCharLimitConverter}" Value="3" />
            </x:Array>
        </StackLayout.Resources>

        <!--#region Navigation-->
        <ContentView ControlTemplate="{Binding NavigationTemplate, Source={x:Reference MainCalendarView}}">
            <StackLayout
                Padding="0,5,0,5"
                BackgroundColor="{Binding NavigationBackgroundColor, Source={x:Reference MainCalendarView}}"
                HeightRequest="{Binding NavigationHeightRequest, Source={x:Reference MainCalendarView}}"
                Orientation="Horizontal">

                <Frame
                    Padding="5"
                    xct:TouchEffect.Command="{Binding NavigateCalendarCommand, Source={x:Reference MainCalendarView}}"
                    xct:TouchEffect.CommandParameter="{Binding BackwardsNavigationAmount, Source={x:Reference MainCalendarView}}"
                    xct:TouchEffect.NativeAnimation="True"
                    BackgroundColor="{Binding NavigationArrowBackgroundColor, Source={x:Reference MainCalendarView}}"
                    CornerRadius="{Binding NavigationArrowCornerRadius, Source={x:Reference MainCalendarView}}"
                    HasShadow="False"
                    HorizontalOptions="CenterAndExpand"
                    VerticalOptions="Center">

                    <Label
                        FontAttributes="Bold"
                        FontSize="30"
                        HeightRequest="30"
                        Text="←"
                        TextColor="{Binding NavigationArrowColor, Source={x:Reference MainCalendarView}}"
                        VerticalTextAlignment="End"
                        WidthRequest="30" />
                </Frame>

                <Label
                    FontAttributes="Bold"
                    FontSize="18"
                    HorizontalTextAlignment="Center"
                    Text="{Binding NavigatedDate, StringFormat='{0:MMMM yyy}', Source={x:Reference MainCalendarView}}"
                    TextColor="{Binding NavigationTextColor, Source={x:Reference MainCalendarView}}"
                    VerticalOptions="Center" />

                <Frame
                    Padding="5"
                    xct:TouchEffect.Command="{Binding NavigateCalendarCommand, Source={x:Reference MainCalendarView}}"
                    xct:TouchEffect.CommandParameter="{Binding ForwardsNavigationAmount, Source={x:Reference MainCalendarView}}"
                    xct:TouchEffect.NativeAnimation="True"
                    BackgroundColor="{Binding NavigationArrowBackgroundColor, Source={x:Reference MainCalendarView}}"
                    CornerRadius="{Binding NavigationArrowCornerRadius, Source={x:Reference MainCalendarView}}"
                    HasShadow="False"
                    HorizontalOptions="CenterAndExpand"
                    VerticalOptions="Center">

                    <Label
                        FontAttributes="Bold"
                        FontSize="30"
                        HeightRequest="30"
                        Text="→"
                        TextColor="{Binding NavigationArrowColor, Source={x:Reference MainCalendarView}}"
                        VerticalTextAlignment="End"
                        WidthRequest="30" />
                </Frame>

            </StackLayout>
        </ContentView>
        <!--#endregion-->

        <!--#region DayNames-->
        <ContentView ControlTemplate="{Binding DayNamesTemplate, Source={x:Reference MainCalendarView}}">
            <CollectionView
                Margin="0,5,0,0"
                HeightRequest="{Binding DayNamesHeightRequest, Source={x:Reference MainCalendarView}}"
                ItemsSource="{Binding DayNamesOrder, Source={x:Reference MainCalendarView}}">

                <CollectionView.Style>
                    <Style TargetType="{x:Type CollectionView}">
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate x:DataType="{x:Type System:DayOfWeek}">
                                    <Label
                                        FontSize="15"
                                        HorizontalTextAlignment="Center"
                                        Text="{Binding ., Converter={StaticResource EnumToStringCharLimitConverter}, ConverterParameter={StaticResource DayNamesMultiConverterParams}}"
                                        TextColor="{Binding DayNameTextColor, Source={x:Reference MainCalendarView}}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding DayNameTemplate, Source={x:Reference MainCalendarView}, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                                TargetType="{x:Type CollectionView}"
                                Value="{StaticResource TrueValue}">
                                <Setter Property="ItemTemplate" Value="{Binding DayNameTemplate, Source={x:Reference MainCalendarView}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CollectionView.Style>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout
                        HorizontalItemSpacing="{Binding DayNameHorizontalSpacing, Source={x:Reference MainCalendarView}}"
                        Orientation="Vertical"
                        Span="{Binding DayNamesOrder.Count, Source={x:Reference MainCalendarView}}"
                        VerticalItemSpacing="{Binding DayNameVerticalSpacing, Source={x:Reference MainCalendarView}}" />
                </CollectionView.ItemsLayout>

            </CollectionView>
        </ContentView>
        <!--#endregion-->

        <!--#region MonthView-->
        <ContentView ControlTemplate="{Binding MonthViewTemplate, Source={x:Reference MainCalendarView}}">
            <CollectionView HeightRequest="{Binding MonthViewHeightRequest, Source={x:Reference MainCalendarView}}" ItemsSource="{Binding Days, Source={x:Reference MainCalendarView}}">
                <CollectionView.Style>
                    <Style TargetType="{x:Type CollectionView}">
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate x:DataType="{x:Type Models:CalendarDay}">
                                    <!--  Needs to be nested because collectionview doesn't respect margins  -->
                                    <ContentView>
                                        <xc:CalendarDayView
                                            Margin="{Binding DayMargin, Source={x:Reference MainCalendarView}}"
                                            Padding="{Binding DayPadding, Source={x:Reference MainCalendarView}}"
                                            CalendarView="{Binding ., Source={x:Reference MainCalendarView}}"
                                            CornerRadius="{Binding DayCornerRadius, Source={x:Reference MainCalendarView}}"
                                            CurrentMonthBackgroundColor="{Binding DayCurrentMonthBackgroundColor, Source={x:Reference MainCalendarView}}"
                                            CurrentMonthBorderColor="{Binding DayCurrentMonthBorderColor, Source={x:Reference MainCalendarView}}"
                                            CurrentMonthTextColor="{Binding DayCurrentMonthTextColor, Source={x:Reference MainCalendarView}}"
                                            DateTime="{Binding DateTime}"
                                            HasShadow="{Binding DayHasShadow, Source={x:Reference MainCalendarView}}"
                                            HeightRequest="{Binding DayHeightRequest, Source={x:Reference MainCalendarView}}"
                                            HorizontalOptions="{Binding DayHorizontalOptions, Source={x:Reference MainCalendarView}}"
                                            OtherMonthBackgroundColor="{Binding DayOtherMonthBackgroundColor, Source={x:Reference MainCalendarView}}"
                                            OtherMonthBorderColor="{Binding DayOtherMonthBorderColor, Source={x:Reference MainCalendarView}}"
                                            OtherMonthTextColor="{Binding DayOtherMonthTextColor, Source={x:Reference MainCalendarView}}"
                                            OutOfRangeBackgroundColor="{Binding DayOutOfRangeBackgroundColor, Source={x:Reference MainCalendarView}}"
                                            OutOfRangeBorderColor="{Binding DayOutOfRangeBorderColor, Source={x:Reference MainCalendarView}}"
                                            OutOfRangeTextColor="{Binding DayOutOfRangeTextColor, Source={x:Reference MainCalendarView}}"
                                            SelectedBackgroundColor="{Binding DaySelectedBackgroundColor, Source={x:Reference MainCalendarView}}"
                                            SelectedBorderColor="{Binding DaySelectedBorderColor, Source={x:Reference MainCalendarView}}"
                                            SelectedTextColor="{Binding DaySelectedTextColor, Source={x:Reference MainCalendarView}}"
                                            Text="{Binding DateTime.Day}"
                                            TodayBackgroundColor="{Binding DayTodayBackgroundColor, Source={x:Reference MainCalendarView}}"
                                            TodayBorderColor="{Binding DayTodayBorderColor, Source={x:Reference MainCalendarView}}"
                                            TodayTextColor="{Binding DayTodayTextColor, Source={x:Reference MainCalendarView}}"
                                            VerticalOptions="{Binding DayVerticalOptions, Source={x:Reference MainCalendarView}}"
                                            WidthRequest="{Binding DayWidthRequest, Source={x:Reference MainCalendarView}}">

                                            <xc:CalendarDayView.Style>
                                                <Style TargetType="{x:Type xc:CalendarDayView}">
                                                    <Style.Triggers>
                                                        <MultiTrigger TargetType="{x:Type xc:CalendarDayView}">
                                                            <MultiTrigger.Conditions>
                                                                <BindingCondition Binding="{Binding SelectionType, Source={x:Reference MainCalendarView}, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static Enums:SelectionType.None}}" Value="False" />
                                                                <BindingCondition Binding="{Binding IsCurrentMonth, Source={RelativeSource Self}}" Value="True" />
                                                                <BindingCondition Binding="{Binding IsOutOfRange, Source={RelativeSource Self}}" Value="False" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="xct:TouchEffect.NativeAnimation" Value="True" />
                                                            <Setter Property="xct:TouchEffect.Command" Value="{Binding ChangeDateSelectionCommand, Source={x:Reference MainCalendarView}}" />
                                                            <Setter Property="xct:TouchEffect.CommandParameter" Value="{Binding DateTime, Source={RelativeSource Self}}" />
                                                        </MultiTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </xc:CalendarDayView.Style>

                                        </xc:CalendarDayView>
                                    </ContentView>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding DayTemplate, Source={x:Reference MainCalendarView}, Converter={StaticResource IsNotNullOrEmptyConverter}}"
                                TargetType="{x:Type CollectionView}"
                                Value="{StaticResource TrueValue}">
                                <Setter Property="ItemTemplate" Value="{Binding DayTemplate, Source={x:Reference MainCalendarView}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CollectionView.Style>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="{Binding DayNamesOrder.Count, Source={x:Reference MainCalendarView}}" />
                </CollectionView.ItemsLayout>

            </CollectionView>
        </ContentView>
        <!--#endregion-->

    </StackLayout>

</ContentView>